#!/bin/bash
set -e

SCRIPTS=/usr/libexec/k3os

rescue() {
    echo ERROR "Something went wrong, run with cmdline k3os.debug for more logging"
    echo Dropping to shell
    exec bash
}

do_mkdir()
{
    mkdir -p $1
    chmod $2 $1
}

do_ln()
{
    if [ -e $2 ]; then
        return 0
    fi
	rm -f $2
    ln -sf $1 $2
}

setup_root()
{
    do_mkdir $1/var/cache 0755
    do_mkdir $1/var/empty 0555
    do_mkdir $1/var/lib 0755
    do_mkdir $1/var/lib/ca-certificates 0755
	do_mkdir $1/var/local/bin 0755
	do_mkdir $1/var/lock 0755
	do_mkdir $1/var/log 0755
	do_mkdir $1/var/opt 0755
	do_mkdir $1/var/spool 0755
	do_mkdir $1/var/tmp 01777
	do_mkdir $1/etc 0755
	do_mkdir $1/home 0755
	do_mkdir $1/tmp 0755
	do_mkdir $1/run 0755
	do_mkdir $1/dev 0755
	do_mkdir $1/sys 0755
	do_mkdir $1/proc 0755
	do_mkdir $1/boot 0755
    do_ln ../run $1/var/run
    do_ln usr/bin $1/bin
    do_ln usr/lib $1/lib
    do_ln usr/lib64 $1/lib64
    do_ln usr/sbin $1/sbin
    do_ln ../../etc/ssl/certs $1/var/lib/ca-certificates/pem
    do_ln ../../etc/ssl/ca-bundle.pem $1/var/lib/ca-certificates/ca-bundle.pem
}

reinit_debug()
{
    if [ "$K3OS_DEBUG" = "true" ]; then
        set -x
        return 0
    fi

    if [ -e /run/k3os/debug ]; then
        set -x
        return 0
    fi

    if [ -e /proc/cmdline ]; then
        for x in $(cat /proc/cmdline); do
            case $x in
                k3os.debug*)
                    export K3OS_DEBUG=true
                    mkdir -p /run/k3os
                    echo debug > /run/k3os/debug || true
                    ;;
            esac
        done
    fi

    if [ "$K3OS_DEBUG" = "true" ]; then
        set -x
    fi
}

perr()
{
    echo "[ERROR]" "$@" 1>&2
}

pfatal()
{
    echo "[FATAL]" "$@" 1>&2
    rescue
    exit 1
}

pinfo()
{
    echo " * " "$@"
}

reinit_debug
