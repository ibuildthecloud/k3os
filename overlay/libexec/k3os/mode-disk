#!/bin/bash

TARGET=/.root

. /usr/libexec/k3os/functions
. /usr/lib/os-release

grow()
{
    parted $1 resizepart $2 100%
    partprobe $1
    e2fsck -f $3
    resize2fs $3
}

setup_mounts()
{
    mkdir -p $TARGET
    mount -L K3OS_STATE $TARGET

    if [ -e $TARGET/.growpart ]; then
        read DEV NUM < $TARGET/.growpart
        if [ ! -e "${DEV}${NUM}" ]; then
            # /dev/sda2 => /dev/sda2
            # /dev/nvme0n1p2 => /dev/nvme0n1p2
            PART=$(blkid -L K3OS_STATE)

            # /dev/sda2 => /dev/sda
            # /dev/nvme0n1p2 => /dev/nvme0n1
            DEV=$(echo "$PART" | sed -r 's/((\d+)p)?\d+$/\2/')

            # /dev/sda2 => 2
            # /dev/nvme0n1p2 => 2
            NUM=$(echo "$PART" | sed 's!.*[^0-9]!!')
        fi
        if [ -e "${PART:=${DEV}${NUM}}" ]; then
            umount $TARGET
            grow $DEV $NUM $PART || true
            mount -L K3OS_STATE $TARGET
        fi
        rm -f $TARGET/.growpart
    fi
}

cleanup()
{
    if [ -e $TARGET/.factory-reset ] || [ -e $TARGET/.ephemeral ]; then
        rm -rf $TARGET/*
    fi
    rm -f $TARGET/.factory-reset
}

copy_root()
{
    local root=$1
    local sha=$2

    if [ -e ${root} ] && echo "${SHA}  ${ROOT}" | sha256sum --quiet -c - ; then
        return 0
    fi

    rm -f $root
    mkdir -p $(dirname $root)
    cp init.squashfs $root
}

mount_usr()
{
    local sha=$(awk '{print $1}' init.squashfs.sha256sum)
    local root=${TARGET}/var/cache/k3os/root/${sha}

    copy_root $root $sha
    mkdir -p ${TARGET}/usr
    mount -t squashfs ${root} ${TARGET}/usr

    local efi=$(blkid -L K3OS_EFI)
    local boot=$(blkid -L K3OS_BOOT)
    local oem=$(blkid -L K3OS_OEM)

    if [ -n "$boot" ]; then
        mount $boot $TARGET/boot
    fi

    if [ -n "$efi" ]; then
        mkdir -p $TARGET/boot/efi
        mount $efi $TARGET/boot/efi
    fi

    if [ -n "$oem" ]; then
        mount $oem $TARGET/usr/share/k3os/oem
    fi
}

move_mounts()
{
    mount --move /dev $TARGET/dev
    mount --move /sys $TARGET/sys
    mount --move /proc $TARGET/proc
    mount --move /run $TARGET/run
    mount --move /etc $TARGET/etc
}

setup_mounts
cleanup
setup_root $TARGET
mount_usr
move_mounts

cd $TARGET
mkdir -p .root
pivot_root . .root
cd /
